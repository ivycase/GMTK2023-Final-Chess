[gd_scene load_steps=23 format=3 uid="uid://hwkg8hp1krt7"]

[ext_resource type="Script" path="res://scripts/UI.gd" id="1_ohqno"]
[ext_resource type="Texture2D" uid="uid://dhe2mg2tai2xk" path="res://sprites/chess-background.png" id="2_vmcp6"]
[ext_resource type="FontFile" uid="uid://plpnksgq5si2" path="res://fonts/m5x7.ttf" id="3_6eo6h"]
[ext_resource type="Material" uid="uid://chngpu370nm4a" path="res://shaders/swap_colors.tres" id="4_1lrfh"]
[ext_resource type="Script" path="res://scripts/Piece.gd" id="4_ef2kr"]
[ext_resource type="Texture2D" uid="uid://bbyu4nk8rmfm4" path="res://sprites/pieces/pink/king.png" id="5_1iaqq"]
[ext_resource type="TileSet" uid="uid://cgpoupdsra5vy" path="res://sprites/chess_tileset.tres" id="5_wrarv"]
[ext_resource type="PackedScene" uid="uid://7mw8kfg7ecrx" path="res://animations/piece_anim.tscn" id="6_bq03w"]
[ext_resource type="Texture2D" uid="uid://bqss6djgr5to8" path="res://sprites/pieces/green/king.png" id="7_d0i2k"]

[sub_resource type="Shader" id="Shader_8cwrb"]
code = "/* 
Earthbound battle backgrounds shader with scrolling effect and palette cycling like in the original game.
by @retr0_dev, modified by @absolutelyivy
	
Apply the shader to a TextureRect or a Sprite. Use a texture with some shapes in a transparent background for best results.
You can then use a ColorRect or another method to paint the background.
You can use the shader on multiple TextureRects and obtain a double-buffer effect tweaking the values for each one, remember to Make Unique the shader material.
*/
shader_type canvas_item;

uniform float amplitude = 0.075;
uniform float frequency = 10.0;
uniform float speed = 2.0;
uniform float amplitude_vertical = 0.0;
uniform float frequency_vertical = 0.0;
uniform float speed_vertical = 0.0;
uniform vec2 scroll_direction = vec2(0.0, 0.0);
uniform float scrolling_speed = 0.08;
uniform vec4 color_shift : source_color;
uniform float shift_amount = 0.5;

void fragment()
{
	float diff_x = amplitude * sin((frequency * UV.y) + (speed * TIME));
	float diff_y = amplitude_vertical * sin((frequency_vertical * UV.y)  + (speed_vertical * TIME));
	vec2 scroll = scroll_direction * TIME * scrolling_speed;
	COLOR = texture(TEXTURE, vec2(UV.x + diff_x, UV.y + diff_y) + scroll);
	COLOR = mix(COLOR, color_shift, shift_amount);
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_hhusd"]
shader = SubResource("Shader_8cwrb")
shader_parameter/amplitude = 0.005
shader_parameter/frequency = 20.0
shader_parameter/speed = 1.0
shader_parameter/amplitude_vertical = 0.0
shader_parameter/frequency_vertical = 0.0
shader_parameter/speed_vertical = 0.0
shader_parameter/scroll_direction = Vector2(-1, 0)
shader_parameter/scrolling_speed = 0.02
shader_parameter/color_shift = Color(0.839216, 0, 0.337255, 1)
shader_parameter/shift_amount = 0.5

[sub_resource type="Animation" id="Animation_06gf3"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 1)]
}

[sub_resource type="Animation" id="Animation_3xvat"]
resource_name = "slow_flash"
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.8),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 0)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_y35ey"]
_data = {
"RESET": SubResource("Animation_06gf3"),
"slow_flash": SubResource("Animation_3xvat")
}

[sub_resource type="ShaderMaterial" id="ShaderMaterial_xpwuw"]

[sub_resource type="Animation" id="Animation_j2lqy"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Sprite:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(1, 1)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Sprite:rotation")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}

[sub_resource type="Animation" id="Animation_hu3mc"]
resource_name = "bounce"
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.3, 0.5, 0.7, 0.9),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1),
"update": 1,
"values": [Vector2(0, 0), Vector2(0, 1), Vector2(0, -2), Vector2(0, 1), Vector2(0, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Sprite:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.3, 0.5, 0.7, 0.9),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1),
"update": 1,
"values": [Vector2(1, 1), Vector2(1.175, 0.875), Vector2(1, 1), Vector2(1.154, 0.875), Vector2(1, 1)]
}

[sub_resource type="Animation" id="Animation_ilnw6"]
resource_name = "hover"
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.3, 0.5, 0.7, 1),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1),
"update": 1,
"values": [Vector2(0, -1), Vector2(-1, -2), Vector2(0, -3), Vector2(1, -2), Vector2(0, -1)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = false
tracks/1/path = NodePath("Sprite:rotation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.2, 0.5, 0.8, 1),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1),
"update": 1,
"values": [0.0, 0.0872665, 0.0, -0.0872665, 0.0]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_fnhnw"]
_data = {
"RESET": SubResource("Animation_j2lqy"),
"bounce": SubResource("Animation_hu3mc"),
"hover": SubResource("Animation_ilnw6")
}

[sub_resource type="Animation" id="Animation_hyjjr"]
resource_name = "finale"
length = 8.0
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("King2:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 1, 2, 3, 4, 5, 6, 7),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [Vector2(8, 40), Vector2(24, 40), Vector2(40, 40), Vector2(40, 24), Vector2(40, 8), Vector2(24, 8), Vector2(8, 8), Vector2(8, 24)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("King:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0.5, 1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [Vector2(40, 8), Vector2(24, 8), Vector2(8, 8), Vector2(8, 24), Vector2(8, 40), Vector2(24, 40), Vector2(40, 40), Vector2(40, 24)]
}

[sub_resource type="Animation" id="Animation_vuy0j"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("King2:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(24, 40)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("King:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(40, 8)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_56mhw"]
_data = {
"RESET": SubResource("Animation_vuy0j"),
"finale": SubResource("Animation_hyjjr")
}

[node name="Level" type="Node2D"]
position = Vector2(72, 80)

[node name="UI" type="Control" parent="."]
layout_mode = 3
anchors_preset = 0
offset_left = -160.0
offset_top = -160.0
offset_right = -160.0
offset_bottom = -160.0
script = ExtResource("1_ohqno")
tutorial_text = "
[center][color=260c1a]Thank you for playing!"
finale = true

[node name="Background" type="TextureRect" parent="UI"]
texture_filter = 2
material = SubResource("ShaderMaterial_hhusd")
layout_mode = 0
offset_right = 1280.0
offset_bottom = 768.0
scale = Vector2(1.5, 1.5)
texture = ExtResource("2_vmcp6")
stretch_mode = 1

[node name="HUD" type="CanvasLayer" parent="UI"]

[node name="GameInfo" type="RichTextLabel" parent="UI/HUD"]
texture_filter = 1
offset_top = 160.0
offset_right = 192.0
offset_bottom = 192.0
theme_override_fonts/normal_font = ExtResource("3_6eo6h")
theme_override_font_sizes/normal_font_size = 16
bbcode_enabled = true

[node name="AnimationPlayer" type="AnimationPlayer" parent="UI/HUD/GameInfo"]
autoplay = "slow_flash"
libraries = {
"": SubResource("AnimationLibrary_y35ey")
}

[node name="Tutorial" type="RichTextLabel" parent="UI/HUD"]
texture_filter = 1
offset_left = 8.0
offset_right = 184.0
offset_bottom = 72.0
theme_override_fonts/normal_font = ExtResource("3_6eo6h")
theme_override_font_sizes/normal_font_size = 16
bbcode_enabled = true
scroll_active = false

[node name="Curtain" type="Control" parent="UI/HUD"]
visible = false
layout_mode = 3
anchors_preset = 0
offset_right = 40.0
offset_bottom = 40.0

[node name="CurtainLeft" type="ColorRect" parent="UI/HUD/Curtain"]
layout_mode = 0
offset_left = 104.0
offset_right = 144.0
offset_bottom = 40.0
scale = Vector2(-2.60744, 4.79368)
color = Color(0.14902, 0.0470588, 0.101961, 1)

[node name="CurtainRight" type="ColorRect" parent="UI/HUD/Curtain"]
layout_mode = 0
offset_left = 192.0
offset_right = 232.0
offset_bottom = 40.0
scale = Vector2(-2.60744, 4.79368)
color = Color(0.14902, 0.0470588, 0.101961, 1)

[node name="Board" type="Node2D" parent="."]

[node name="TileMap" type="TileMap" parent="Board"]
material = ExtResource("4_1lrfh")
tile_set = ExtResource("5_wrarv")
format = 2
layer_0/name = "Board"
layer_0/tile_data = PackedInt32Array(65537, 65536, 4, 65538, 131072, 3, 65536, 131072, 4, 131072, 65536, 3, 131074, 65536, 4, 131073, 131072, 4, 2, 0, 3, 196609, 131072, 5, 196608, 0, 5, 196610, 0, 5, 0, 0, 3, 1, 196608, 3)
layer_1/name = "Indicator"
layer_1/enabled = true
layer_1/modulate = Color(1, 1, 1, 1)
layer_1/y_sort_enabled = false
layer_1/y_sort_origin = 0
layer_1/z_index = 0
layer_1/tile_data = PackedInt32Array()

[node name="Prototype" type="Node2D" parent="."]

[node name="King2" type="Node2D" parent="Prototype"]
position = Vector2(24, 40)
script = ExtResource("4_ef2kr")
type = 5
team = 1

[node name="Sprite" type="Sprite2D" parent="Prototype/King2"]
texture = ExtResource("5_1iaqq")

[node name="AnimationPlayer" parent="Prototype/King2" instance=ExtResource("6_bq03w")]

[node name="King" type="Node2D" parent="Prototype"]
position = Vector2(40, 8)
script = ExtResource("4_ef2kr")
type = 5

[node name="Sprite" type="Sprite2D" parent="Prototype/King"]
material = SubResource("ShaderMaterial_xpwuw")
texture = ExtResource("7_d0i2k")

[node name="AnimationPlayer" type="AnimationPlayer" parent="Prototype/King"]
libraries = {
"": SubResource("AnimationLibrary_fnhnw")
}

[node name="AnimationPlayer" type="AnimationPlayer" parent="Prototype"]
autoplay = "finale"
libraries = {
"": SubResource("AnimationLibrary_56mhw")
}
